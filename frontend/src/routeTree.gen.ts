/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UsingModuleComponentImport } from './routes/using-module-component'
import { Route as LoginImport } from './../../modules/auth/frontend/src/routes/login'
import { Route as AboutImport } from './routes/about'
import { Route as AuthImport } from './../../modules/auth/frontend/src/routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as ExampleIndexImport } from './../../modules/template/frontend/src/routes/example/index'
import { Route as AuthdashboardImport } from './../../modules/auth/frontend/src/routes/_auth.dashboard'

// Create/Update Routes

const UsingModuleComponentRoute = UsingModuleComponentImport.update({
  id: '/using-module-component',
  path: '/using-module-component',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ExampleIndexRoute = ExampleIndexImport.update({
  id: '/example/',
  path: '/example/',
  getParentRoute: () => rootRoute,
} as any)

const AuthdashboardRoute = AuthdashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/using-module-component': {
      id: '/using-module-component'
      path: '/using-module-component'
      fullPath: '/using-module-component'
      preLoaderRoute: typeof UsingModuleComponentImport
      parentRoute: typeof rootRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthdashboardImport
      parentRoute: typeof AuthImport
    }
    '/example/': {
      id: '/example/'
      path: '/example'
      fullPath: '/example'
      preLoaderRoute: typeof ExampleIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthdashboardRoute: typeof AuthdashboardRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthdashboardRoute: AuthdashboardRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/using-module-component': typeof UsingModuleComponentRoute
  '/dashboard': typeof AuthdashboardRoute
  '/example': typeof ExampleIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/using-module-component': typeof UsingModuleComponentRoute
  '/dashboard': typeof AuthdashboardRoute
  '/example': typeof ExampleIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/using-module-component': typeof UsingModuleComponentRoute
  '/_auth/dashboard': typeof AuthdashboardRoute
  '/example/': typeof ExampleIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/login'
    | '/using-module-component'
    | '/dashboard'
    | '/example'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/login'
    | '/using-module-component'
    | '/dashboard'
    | '/example'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/about'
    | '/login'
    | '/using-module-component'
    | '/_auth/dashboard'
    | '/example/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  UsingModuleComponentRoute: typeof UsingModuleComponentRoute
  ExampleIndexRoute: typeof ExampleIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  UsingModuleComponentRoute: UsingModuleComponentRoute,
  ExampleIndexRoute: ExampleIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/about",
        "/login",
        "/using-module-component",
        "/example/"
      ]
    },
    "/": {
      "filePath": "./index.tsx"
    },
    "/_auth": {
      "filePath": "../../../modules/auth/frontend/src/routes/_auth.tsx",
      "children": [
        "/_auth/dashboard"
      ]
    },
    "/about": {
      "filePath": "./about.tsx"
    },
    "/login": {
      "filePath": "../../../modules/auth/frontend/src/routes/login.tsx"
    },
    "/using-module-component": {
      "filePath": "./using-module-component.tsx"
    },
    "/_auth/dashboard": {
      "filePath": "../../../modules/auth/frontend/src/routes/_auth.dashboard.tsx",
      "parent": "/_auth"
    },
    "/example/": {
      "filePath": "../../../modules/template/frontend/src/routes/example/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
